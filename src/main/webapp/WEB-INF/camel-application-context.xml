<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:camel="http://camel.apache.org/schema/spring"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
  				http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

	<import resource="classpath:META-INF/cxf/cxf.xml" />

	<camelContext id="camelProcess" xmlns="http://camel.apache.org/schema/spring" useMDCLogging="true">
		<dataFormats>
			<soapjaxb id="org.onvif.ver10.replay.wsdl"  contextPath="org.onvif.ver10.replay.wsdl" version="1.2"/>
			<soapjaxb id="org.onvif.ver10.recording.wsdl"  contextPath="org.onvif.ver10.recording.wsdl" version="1.2"/>
			<soapjaxb id="org.onvif.ver10.events.wsdl"  contextPath="org.onvif.ver10.events.wsdl" version="1.2"/>
			<soapjaxb id="org.onvif.ver10.device.wsdl"  contextPath="org.onvif.ver10.device.wsdl" version="1.2"/>
			<soapjaxb id="org.onvif.ver20.ptz.wsdl"  contextPath="org.onvif.ver20.ptz.wsdl" version="1.2"/>
		</dataFormats>
		
		<!--  log -->
		<intercept>
			<to uri="log:interceptor?showHeaders=true&amp;level=DEBUG" />
		</intercept>
		
		<!--  test -->
		<route>
			<from uri="servlet:///hello" />
			<setBody>
				<constant>Hello</constant>
			</setBody>
		</route>

		<!--  replay.wsdl -->
		<route>
			<from uri="cxf:/ReplayPort?serviceClass=org.onvif.ver10.replay.wsdl.ReplayPort&amp;loggingFeatureEnabled=true&amp;dataFormat=MESSAGE" />
			<choice>
				<when>
					<simple>${header.SOAPAction} == '"http://www.onvif.org/ver10/replay/wsdl/GetReplayUri"'</simple>
					<to uri="seda:GetReplayUri"/>
					<marshal ref="org.onvif.ver10.replay.wsdl"/>
				</when>
				<otherwise>
					<setFaultBody>
						<simple>SOAP_FAULT</simple>
					</setFaultBody>
				</otherwise>
			</choice>
		</route>
		<route>
			<from uri="seda:GetReplayUri" />			
			<setBody>
				<groovy>
					response = new org.onvif.ver10.replay.wsdl.GetReplayUriResponse();
					response.setUri("rtsp://x.y.y.z/replay");
					response;
				</groovy>
			</setBody>
		</route>

		<!--  recording.wsdl -->
		<route>
			<from uri="cxf:/RecordingPort?serviceClass=org.onvif.ver10.recording.wsdl.RecordingPort&amp;loggingFeatureEnabled=true&amp;dataFormat=MESSAGE" />
			<choice>
				<when>
					<simple>${header.SOAPAction} == '"http://www.onvif.org/ver10/recording/wsdl/GetServiceCapabilities"'</simple>
					<to uri="seda:GetServiceCapabilities"/>
					<marshal ref="org.onvif.ver10.recording.wsdl"/>
				</when>
				<otherwise>
					<setFaultBody>
						<simple>SOAP_FAULT</simple>
					</setFaultBody>
				</otherwise>
			</choice>
		</route>
		<route>
			<from uri="seda:GetServiceCapabilities" />			
			<setBody>
				<groovy>
					response = new org.onvif.ver10.recording.wsdl.GetServiceCapabilitiesResponse();
					response;
				</groovy>
			</setBody>
		</route>

		<!--  event.wsdl -->
		<route>
			<from uri="cxf:/PullPointSubscription?serviceClass=org.onvif.ver10.events.wsdl.PullPointSubscription&amp;loggingFeatureEnabled=true&amp;dataFormat=MESSAGE" />
			<choice>
				<when>
					<simple>${header.SOAPAction} == '"http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/PullMessagesRequest"'</simple>
					<to uri="seda:PullMessages"/>
					<marshal ref="org.onvif.ver10.events.wsdl"/>
				</when>
				<otherwise>
					<setFaultBody>
						<simple>SOAP_FAULT</simple>
					</setFaultBody>
				</otherwise>
			</choice>
		</route>
		<route>
			<from uri="seda:PullMessages" />
			<setBody>
				<groovy>
					elt = new javax.xml.bind.JAXBElement&lt;String&gt;(new javax.xml.namespace.QName("xmlString"),String.class, "test");
					
					message = new org.oasis_open.docs.wsn.b_2.NotificationMessageHolderType.Message();
					message.setAny(elt);

					notification = new org.oasis_open.docs.wsn.b_2.NotificationMessageHolderType();
					notification.setMessage(message);

					response = new org.onvif.ver10.events.wsdl.PullMessagesResponse();
					response.getNotificationMessage().add(notification);
					response;
				</groovy>
			</setBody>
		</route>
		<route>
			<from uri="cxf:/EventPortType?serviceClass=org.onvif.ver10.events.wsdl.EventPortType&amp;loggingFeatureEnabled=true&amp;dataFormat=MESSAGE" />
			<setFaultBody>
				<simple>SOAP_FAULT</simple>
			</setFaultBody>
		</route>

		<!-- devicemgmt.wsdl -->
		<route>
			<from uri="cxf:/Device?serviceClass=org.onvif.ver10.device.wsdl.Device&amp;loggingFeatureEnabled=true&amp;dataFormat=MESSAGE" />
			<choice>
				<when>
					<simple>${header.SOAPAction} == '"http://www.onvif.org/ver10/device/wsdl/GetCapabilities"'</simple>
					<to uri="seda:GetCapabilities"/>
					<marshal ref="org.onvif.ver10.device.wsdl"/>
				</when>
				<otherwise>
					<setFaultBody>
						<simple>SOAP_FAULT</simple>
					</setFaultBody>
				</otherwise>
			</choice>
		</route>
		<route>
			<from uri="seda:GetCapabilities" />
			<setBody>
				<groovy>
					deviceCapability = new org.onvif.ver10.schema.DeviceCapabilities();
					deviceCapability.setXAddr("http://a.b.c.d/device");
					eventCapability = new org.onvif.ver10.schema.EventCapabilities()
					eventCapability.setXAddr("http://a.b.c.d/events");
					
					capabilities =  new org.onvif.ver10.schema.Capabilities();
					capabilities.setDevice(deviceCapability);
					capabilities.setEvents(eventCapability);
					
					response = new org.onvif.ver10.device.wsdl.GetCapabilitiesResponse();
					response.setCapabilities(capabilities);
					response;
				</groovy>
			</setBody>
		</route>

		<!--  ptz.wsdl -->
		<route>
			<from uri="cxf:/PTZ?serviceClass=org.onvif.ver20.ptz.wsdl.PTZ&amp;loggingFeatureEnabled=true&amp;dataFormat=MESSAGE" />
			<setBody>
				<groovy>
					response = new org.onvif.ver20.ptz.wsdl.GetConfigurationsResponse();
					response;
				</groovy>
			</setBody>
			<marshal ref="org.onvif.ver20.ptz.wsdl"/>
		</route>

	</camelContext>

</beans>