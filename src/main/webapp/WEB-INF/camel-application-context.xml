<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:camel="http://camel.apache.org/schema/spring"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
  				http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

	<import resource="classpath:META-INF/cxf/cxf.xml" />

	<!--bean id="myNameStrategy" class="org.apache.camel.dataformat.soap.name.ServiceInterfaceStrategy">
		<constructor-arg value="org.onvif.ver10.device.wsdl.Device"/>
		<constructor-arg value="true"/>
	</bean-->
    
	<camelContext id="camelProcess" xmlns="http://camel.apache.org/schema/spring" useMDCLogging="true">
		<dataFormats>
			<soapjaxb id="org.onvif.ver10.replay.wsdl"  contextPath="org.onvif.ver10.replay.wsdl" />
			<soapjaxb id="org.onvif.ver10.recording.wsdl"  contextPath="org.onvif.ver10.recording.wsdl" />
			<soapjaxb id="org.onvif.ver10.events.wsdl"  contextPath="org.onvif.ver10.events.wsdl" />
			<soapjaxb id="org.onvif.ver10.device.wsdl"  contextPath="org.onvif.ver10.device.wsdl"/>
			<soapjaxb id="org.onvif.ver20.ptz.wsdl"  contextPath="org.onvif.ver20.ptz.wsdl"/>
		</dataFormats>
		<intercept>
			<to uri="log:interceptor?showHeaders=true&amp;level=DEBUG" />
		</intercept>

		<route>
			<from uri="servlet:///hello" />
			<setBody>
				<constant>Hello</constant>
			</setBody>
		</route>

		<route>
			<from uri="cxf:/ReplayPort?serviceClass=org.onvif.ver10.replay.wsdl.ReplayPort&amp;loggingFeatureEnabled=true&amp;dataFormat=MESSAGE" />
			<setBody>
				<groovy>
					response = new org.onvif.ver10.replay.wsdl.GetReplayUriResponse();
					response.setUri("http://x.y.y.z/replay");
					response;
				</groovy>
			</setBody>
			<marshal ref="org.onvif.ver10.replay.wsdl"/>
		</route>

		<route>
			<from uri="cxf:/RecordingPort?serviceClass=org.onvif.ver10.recording.wsdl.RecordingPort&amp;loggingFeatureEnabled=true&amp;dataFormat=MESSAGE" />
			<setBody>
				<groovy>
					response = new org.onvif.ver10.recording.wsdl.GetServiceCapabilitiesResponse();
					response;
				</groovy>
			</setBody>
			<marshal ref="org.onvif.ver10.recording.wsdl"/>
		</route>

		<route>
			<from uri="cxf:/PullPointSubscription?serviceClass=org.onvif.ver10.events.wsdl.PullPointSubscription&amp;loggingFeatureEnabled=true&amp;dataFormat=MESSAGE" />
			<setBody>
				<groovy>
					response = new org.onvif.ver10.events.wsdl.PullMessagesResponse();
					response;
				</groovy>
			</setBody>
			<marshal ref="org.onvif.ver10.events.wsdl"/>
		</route>
		<route>
			<from uri="cxf:/EventPortType?serviceClass=org.onvif.ver10.events.wsdl.EventPortType&amp;loggingFeatureEnabled=true&amp;dataFormat=MESSAGE" />
			<setBody>
				<groovy>
					response = new org.onvif.ver10.events.wsdl.PullMessagesResponse();
					response;
				</groovy>
			</setBody>
			<marshal ref="org.onvif.ver10.events.wsdl"/>
		</route>

		<route>
			<from uri="cxf:/Device?serviceClass=org.onvif.ver10.device.wsdl.Device&amp;loggingFeatureEnabled=true&amp;dataFormat=MESSAGE" />
			<setBody>
				<groovy>
					capabilities =  new org.onvif.ver10.device.wsdl.GetCapabilities();
					capabilities.getCategory().add(org.onvif.ver10.schema.CapabilityCategory.DEVICE); 
					response = new org.onvif.ver10.device.wsdl.GetCapabilitiesResponse();
					response.setCapabilities(capabilities);
					response;
				</groovy>
			</setBody>
			<marshal ref="org.onvif.ver10.device.wsdl"/>
		</route>

		<route>
			<from uri="cxf:/PTZ?serviceClass=org.onvif.ver20.ptz.wsdl.PTZ&amp;loggingFeatureEnabled=true&amp;dataFormat=MESSAGE" />
			<setBody>
				<groovy>
					response = new org.onvif.ver20.ptz.wsdl.GetConfigurationsResponse();
					response;
				</groovy>
			</setBody>
			<marshal ref="org.onvif.ver20.ptz.wsdl"/>
		</route>

	</camelContext>

</beans>